{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\cmder\\\\lbe-mis\\\\BookApp\\\\app\\\\screen\\\\TopRatingScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nvar BASE_URL = 'https://www.googleapis.com/books/v1/volumes?q=quilting';\n\nfunction TopRatingScreen(props) {\n  var _this = this;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      booksData = _React$useState2[0],\n      setBooksData = _React$useState2[1];\n\n  var getAllBooks = function getAllBooks() {\n    var response, jsonData;\n    return _regeneratorRuntime.async(function getAllBooks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(BASE_URL, {\n              method: 'GET',\n              mode: 'cors',\n              credentials: 'same-origin',\n              Vary: 'Origin',\n              headers: {\n                'Access-Control-Allow-Origin': 'https://www.googleapis.com/books/v1/volumes?q=quilting'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            jsonData = _context.sent;\n            setBooksData(jsonData);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  React.useEffect(function () {\n    getAllBooks();\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.judul,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Top Rating Novels\"), React.createElement(FlatList, {\n    data: booksData.items,\n    style: styles.buku,\n    keyExtractor: function keyExtractor(item, index) {\n      return item + \"--\" + index;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.volumeinfo.imageLinks.smallThumbnail\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, item.volumeinfo.title));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  buku: {\n    width: '100%',\n    height: 50,\n    backgroundColor: 'white',\n    borderRadius: 10\n  },\n  container: {\n    paddingTop: 70,\n    paddingHorizontal: 20,\n    backgroundColor: '#edf0f5',\n    flex: 1\n  },\n  judul: {\n    fontSize: 30\n  }\n});\nexport default TopRatingScreen;","map":{"version":3,"sources":["C:/cmder/lbe-mis/BookApp/app/screen/TopRatingScreen.js"],"names":["React","BASE_URL","TopRatingScreen","props","useState","booksData","setBooksData","getAllBooks","fetch","method","mode","credentials","Vary","headers","response","json","jsonData","console","log","useEffect","styles","container","judul","items","buku","item","index","uri","volumeinfo","imageLinks","smallThumbnail","title","StyleSheet","create","width","height","backgroundColor","borderRadius","paddingTop","paddingHorizontal","flex","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAGA,IAAMC,QAAQ,GAAG,wDAAjB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAAA,wBACMH,KAAK,CAACI,QAAN,CAAe,EAAf,CADN;AAAA;AAAA,MACrBC,SADqB;AAAA,MACVC,YADU;;AAG5B,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESC,KAAK,CACtBP,QADsB,EACZ;AACNQ,cAAAA,MAAM,EAAE,KADF;AAENC,cAAAA,IAAI,EAAE,MAFA;AAGNC,cAAAA,WAAW,EAAE,aAHP;AAINC,cAAAA,IAAI,EAAE,QAJA;AAKNC,cAAAA,OAAO,EAAE;AACL,+CAA+B;AAD1B;AALH,aADY,CAFd;;AAAA;AAERC,YAAAA,QAFQ;AAAA;AAAA,6CAcSA,QAAQ,CAACC,IAAT,EAdT;;AAAA;AAcRC,YAAAA,QAdQ;AAgBZV,YAAAA,YAAY,CAACU,QAAD,CAAZ;AAhBY;AAAA;;AAAA;AAAA;AAAA;AAqBZC,YAAAA,OAAO,CAACC,GAAR;;AArBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAyBAlB,EAAAA,KAAK,CAACmB,SAAN,CAAiB,YAAM;AACnBZ,IAAAA,WAAW;AACd,GAFD;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAIjB,SAAS,CAACkB,KADtB;AAEI,IAAA,KAAK,EAAIH,MAAM,CAACI,IAFpB;AAGI,IAAA,YAAY,EAAI,sBAACC,IAAD,EAAOC,KAAP;AAAA,aAAqBD,IAArB,UAA8BC,KAA9B;AAAA,KAHpB;AAKI,IAAA,UAAU,EAAI;AAAA,UAAED,IAAF,QAAEA,IAAF;AAAA,aACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAACE,UAAAA,GAAG,EAAEF,IAAI,CAACG,UAAL,CAAgBC,UAAhB,CAA2BC;AAAjC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOL,IAAI,CAACG,UAAL,CAAgBG,KAAvB,CAFJ,CADU;AAAA,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAkBH;;AAED,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,IAAI,EAAG;AACHU,IAAAA,KAAK,EAAG,MADL;AAEHC,IAAAA,MAAM,EAAG,EAFN;AAGHC,IAAAA,eAAe,EAAG,OAHf;AAIHC,IAAAA,YAAY,EAAE;AAJX,GADsB;AAO7BhB,EAAAA,SAAS,EAAG;AACRiB,IAAAA,UAAU,EAAE,EADJ;AAERC,IAAAA,iBAAiB,EAAE,EAFX;AAGRH,IAAAA,eAAe,EAAG,SAHV;AAIRI,IAAAA,IAAI,EAAE;AAJE,GAPiB;AAa7BlB,EAAAA,KAAK,EAAG;AACJmB,IAAAA,QAAQ,EAAE;AADN;AAbqB,CAAlB,CAAf;AAkBA,eAAevC,eAAf","sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, FlatList, Image } from 'react-native';\r\n\r\nconst BASE_URL = 'https://www.googleapis.com/books/v1/volumes?q=quilting';\r\n\r\nfunction TopRatingScreen(props) {\r\n    const [booksData, setBooksData] = React.useState({});\r\n\r\n    const getAllBooks = async() => {\r\n        try {\r\n            let response = await fetch(\r\n                BASE_URL, {\r\n                    method: 'GET',\r\n                    mode: 'cors',\r\n                    credentials: 'same-origin',\r\n                    Vary: 'Origin',\r\n                    headers: {\r\n                        'Access-Control-Allow-Origin': 'https://www.googleapis.com/books/v1/volumes?q=quilting', \r\n                    }\r\n                }\r\n            );\r\n\r\n            let jsonData = await response.json();\r\n\r\n            setBooksData(jsonData);\r\n        }\r\n\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    React.useEffect( () => {\r\n        getAllBooks();\r\n    });\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.judul}>Top Rating Novels</Text>\r\n            <FlatList\r\n                data = {booksData.items}\r\n                style = {styles.buku}\r\n                keyExtractor = {(item, index) => (`${item}--${index}`)}\r\n\r\n                renderItem = {({item}) => (\r\n                    <View>\r\n                        <Image source={{uri: item.volumeinfo.imageLinks.smallThumbnail}}/>\r\n                        <Text>{item.volumeinfo.title}</Text>\r\n                    </View>\r\n                )\r\n                }\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    buku : {\r\n        width : '100%',\r\n        height : 50,\r\n        backgroundColor : 'white',\r\n        borderRadius: 10,\r\n    },\r\n    container : {\r\n        paddingTop: 70,\r\n        paddingHorizontal: 20,\r\n        backgroundColor : '#edf0f5',\r\n        flex: 1\r\n    },\r\n    judul : {\r\n        fontSize: 30\r\n    },\r\n})\r\n\r\nexport default TopRatingScreen;"]},"metadata":{},"sourceType":"module"}